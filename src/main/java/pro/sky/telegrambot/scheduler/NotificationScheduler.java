package pro.sky.telegrambot.scheduler;

import pro.sky.telegrambot.entity.NotificationTask;
import pro.sky.telegrambot.repository.NotificationTaskRepository;
import com.pengrad.telegrambot.TelegramBot;
import com.pengrad.telegrambot.request.SendMessage;
import com.pengrad.telegrambot.response.SendResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import java.util.List;

@Component
public class NotificationScheduler {

    private static final Logger logger = LoggerFactory.getLogger(NotificationScheduler.class);
    private final NotificationTaskRepository notificationTaskRepository;
    private final TelegramBot bot;

    public NotificationScheduler(NotificationTaskRepository notificationTaskRepository, TelegramBot bot) {
        this.notificationTaskRepository = notificationTaskRepository;
        this.bot = bot;
    }

    @Scheduled(cron = "0 * * * * *") // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    @Transactional
    public void checkNotifications() {
        LocalDateTime now = LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¢–û–õ–¨–ö–û —Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        List<NotificationTask> notifications = notificationTaskRepository.findReadyNotifications(now);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        for (NotificationTask notification : notifications) {
            sendMessage(notification.getChatId(), "üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: " + notification.getMessage());
        }

        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–¥–Ω–∏–º SQL-–∑–∞–ø—Ä–æ—Å–æ–º (–±–µ–∑ findAll!)
        notificationTaskRepository.deleteOldNotifications(now);
    }

    private void sendMessage(long chatId, String messageText) {
        SendMessage message = new SendMessage(chatId, messageText);
        SendResponse response = bot.execute(message);

        if (!response.isOk()) {
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {} - {}", response.errorCode(), response.description());
        }
    }
}
